/*
Base mixins and Functions ONLY in here
No CSS output!
Remember these tools/utilities will be made availabe to all your components,
any CSS you output in here will add massive bloat to your project.
If you need common css, add to main.scss
========================================================================== */
/* ============================================================================================
	Vertical Spacing (for use with v-spacing mixin)
============================================================================================= */
/* ============================================================================================
	Breakpoints
============================================================================================= */
/* ============================================================================================
	Colours
============================================================================================= */
/* ============================================================================================
	Z-Index
============================================================================================= */
/* =========================================================================
  cubic-bezier curve variables
========================================================================== */
/* =========================================================================
  Font variables
========================================================================== */
/* =========================================================================
  Grid Variables (size vars must match the breakpoint vars)
========================================================================== */
@media (min-width: 320px) {
  body::after {
    content: '{"xsmall":{"value": "320px", "active": true}, "small":{"value": "768px", "active": false}, "medium":{"value": "1024px", "active": false}, "large":{"value": "1440px", "active": false}, "xlarge":{"value": "1920px", "active": false}, "xxlarge":{"value": "2000px", "active": false}}';
    display: block;
    height: 0;
    overflow: hidden;
    width: 0; } }

@media (min-width: 768px) {
  body::after {
    content: '{"xsmall":{"value": "320px", "active": true}, "small":{"value": "768px", "active": true}, "medium":{"value": "1024px", "active": false}, "large":{"value": "1440px", "active": false}, "xlarge":{"value": "1920px", "active": false}, "xxlarge":{"value": "2000px", "active": false}}';
    display: block;
    height: 0;
    overflow: hidden;
    width: 0; } }

@media (min-width: 1024px) {
  body::after {
    content: '{"xsmall":{"value": "320px", "active": true}, "small":{"value": "768px", "active": true}, "medium":{"value": "1024px", "active": true}, "large":{"value": "1440px", "active": false}, "xlarge":{"value": "1920px", "active": false}, "xxlarge":{"value": "2000px", "active": false}}';
    display: block;
    height: 0;
    overflow: hidden;
    width: 0; } }

@media (min-width: 1440px) {
  body::after {
    content: '{"xsmall":{"value": "320px", "active": true}, "small":{"value": "768px", "active": true}, "medium":{"value": "1024px", "active": true}, "large":{"value": "1440px", "active": true}, "xlarge":{"value": "1920px", "active": false}, "xxlarge":{"value": "2000px", "active": false}}';
    display: block;
    height: 0;
    overflow: hidden;
    width: 0; } }

@media (min-width: 1920px) {
  body::after {
    content: '{"xsmall":{"value": "320px", "active": true}, "small":{"value": "768px", "active": true}, "medium":{"value": "1024px", "active": true}, "large":{"value": "1440px", "active": true}, "xlarge":{"value": "1920px", "active": true}, "xxlarge":{"value": "2000px", "active": false}}';
    display: block;
    height: 0;
    overflow: hidden;
    width: 0; } }

@media (min-width: 2000px) {
  body::after {
    content: '{"xsmall":{"value": "320px", "active": true}, "small":{"value": "768px", "active": true}, "medium":{"value": "1024px", "active": true}, "large":{"value": "1440px", "active": true}, "xlarge":{"value": "1920px", "active": true}, "xxlarge":{"value": "2000px", "active": true}}';
    display: block;
    height: 0;
    overflow: hidden;
    width: 0; } }

/* ==========================================================================================================
	Grid Mixins
=========================================================================================================== */
/* ==========================================================================
	Site Transition
	Apply transitions consistently across the project
========================================================================== */
/* ==========================================================================
	Variable Spacing (v-spacing)
	Use with values set in _config.scss
========================================================================== */
/* ==========================================================================
	Tracking
	Convert XD, illustrator, indesign and
	photoshop tracking into letter spacing.
========================================================================== */
/* ============================================================================================================
	Line Height Crop (lhCrop)
	Removes the additional line height from top of text - https://codyhouse.co/blog/post/line-height-crop
	Use to make sure the top of your text lines up with other elements along side it.
	Enter a unitless line height (same as the type line hight)
============================================================================================================= */
/* ===========================================================================================
	Unitless Line Height
	Converts a pixel, percentage, rem or em value to a unitless value based on a given font size.
	Ideal for working out unitless line heights.
	Stolen from Foundation https://get.foundation/sites/docs/sass-functions.html#unitless-calc

	@param {Number} $value - Value to convert to a unitless line height
	@param {Number} $base - The font size to use to work out the line height - defaults to $global-font-size
	@return {Number} - Unitless number
=========================================================================================== */
/* ==================================================================================
	Removes the unit (e.g. px, em, rem) from a value, returning the number only.

	@param {Number} $num - Number to strip unit from.
	@returns {Number} The same number, sans unit.
=================================================================================== */
/* ==================================================================================
	used to create resonsive type

	@param {Number} $min-font-size - Number of the miniumum font size with units.
	@param {Number} $max-font-size - Number of the maximum font size with units.
	@param {Number} $line-height - Number of the lineheight with units.
	@returns font size using the v-space mixin and a unitless lineheight.
=================================================================================== */
/* ==================================================================================
	used to retreive varbailes from the $site-ccs-variables array

	$type = type is the name you set for your nested varaible array
	$size = is the nested variable you wish to get.
	@returns the value of teh specified variable
=================================================================================== */
/* ==================================================================================
	loops through varbailes from the $site-ccs-variables array & out put css var

	$value = used to get the correct value
=================================================================================== */
/* ==================================================================================
	used to retreive css var based on the breakpoint passed

	$breakpoint = used to specify media query
=================================================================================== */
/* ==================================================================================
	SIBLING FADE: fade out siblings around a hovered item
=================================================================================== */
/* ==================================================================================
	close icon mixin (needs somehwere else to sit)
=================================================================================== */
/* ==================================================================================
	Get the last row of your grid
	$coloumns: amount of coloumns in a row
	$siblingType: the sibling selector you want to use to target the row
=================================================================================== */
/* ==========================================================================================================
	Character Style Mixins
=========================================================================================================== */
/* ==============================================================================================
	WYSIWYG Mixin and class
	Apply to content that is using a WYSIWYG editor field.
	Redefines all the typographic HTML elements that TinyMce outputs. (h1,img,p,ul etc.)
=============================================================================================== */
/*
Form Mixins
Create mixins first so they can be reused on Woo forms or other places where you can't add your own classes
========================================================================== */
/* ==========================================================================
	Issue Header Component
========================================================================== */
.c-IssueHeader {
  width: 100%;
  min-height: 700px;
  position: relative;
  position: relative;
  grid-column: 1 / -1;
  width: calc(100% + var(--site-margin));
  left: calc(var(--site-margin) * -1);
  width: calc(100% + (var(--site-margin) * 2));
  margin-bottom: calc(0.02381 * 100vw + 72.38095px); }
  @media (min-width: 1921px) {
    .c-IssueHeader {
      margin-bottom: 120px; } }
  @media (max-width: 768px) {
    .c-IssueHeader {
      margin-bottom: 80px; } }

.c-IssueHeader__inner {
  height: 100%;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap; }

.c-IssueHeader__left,
.c-IssueHeader__right {
  width: 100%; }
  @media (min-width: 1024px) {
    .c-IssueHeader__left,
    .c-IssueHeader__right {
      width: 50%; } }

.c-IssueHeader__left {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding-left: var(--site-margin);
  padding-right: var(--site-margin);
  padding-top: calc(0.05357 * 100vw + 2.85714px);
  padding-bottom: calc(0.02083 * 100vw + 13.33333px); }
  @media (min-width: 1921px) {
    .c-IssueHeader__left {
      padding-top: 110px; } }
  @media (max-width: 768px) {
    .c-IssueHeader__left {
      padding-top: 20px; } }
  @media (min-width: 1921px) {
    .c-IssueHeader__left {
      padding-bottom: 55px; } }
  @media (max-width: 768px) {
    .c-IssueHeader__left {
      padding-bottom: 20px; } }
  @media (max-width: 1023px) {
    .c-IssueHeader__left {
      order: 2;
      padding-bottom: 0; } }
  @media (min-width: 1024px) {
    .c-IssueHeader__left {
      height: 100vh;
      min-height: 700px; } }

@media (max-width: 1023px) {
  .c-IssueHeader__right {
    order: 1; } }

.c-IssueHeader__content {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  align-items: flex-end;
  text-align: left;
  flex-wrap: wrap;
  position: relative; }

.c-IssueHeader__image-wrap {
  height: 75vh;
  position: relative;
  overflow: hidden; }
  @media (min-width: 1024px) {
    .c-IssueHeader__image-wrap {
      height: 120vh;
      min-height: 900px; } }

.c-IssueHeader__img {
  height: 100%; }
  @media (max-width: 1023px) {
    .c-IssueHeader__img {
      position: absolute;
      top: 50%;
      left: 50%;
      width: 100%;
      transform: translate(-50%, -50%); }
      .c-IssueHeader__img::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: #1d1d1b;
        opacity: 0.15;
        pointer-events: none; } }
  @media (min-width: 1024px) {
    .c-IssueHeader__img {
      height: 100%; } }
  .c-IssueHeader__img img {
    height: 100%;
    object-fit: cover; }

.c-IssueHeader__cta-wrap {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: center;
  align-content: center; }

.c-IssueHeader__header,
.c-IssueHeader__header-mobile {
  width: 100%;
  display: flex;
  justify-content: space-between;
  text-transform: uppercase;
  font-size: calc(0.05357 * 100vw + 42.85714px);
  line-height: 1;
  letter-spacing: 0.01em;
  font-family: "NeueHaasUnicaW1GRegular", sans-serif;
  font-style: normal;
  font-weight: 400; }
  @media (min-width: 1921px) {
    .c-IssueHeader__header,
    .c-IssueHeader__header-mobile {
      font-size: 150px; } }
  @media (max-width: 768px) {
    .c-IssueHeader__header,
    .c-IssueHeader__header-mobile {
      font-size: 60px; } }
  .c-IssueHeader__header em,
  .c-IssueHeader__header-mobile em {
    font-style: normal; }

@media (max-width: 1023px) {
  .c-IssueHeader__header {
    display: none; } }

.c-IssueHeader__header-mobile {
  width: 100%;
  position: absolute;
  bottom: 20px;
  z-index: +1;
  color: #fff;
  padding-left: var(--site-margin);
  padding-right: var(--site-margin); }
  @media (min-width: 1024px) {
    .c-IssueHeader__header-mobile {
      display: none; } }

.c-IssueHeader__name {
  font-size: calc(0.00893 * 100vw + 22.14286px);
  line-height: 1.2;
  letter-spacing: -0.02em;
  font-family: "NeueHaasUnicaW1GRegular", sans-serif;
  font-style: normal;
  font-weight: 400;
  margin-bottom: calc(-0.01071 * 100vw + 36.42857px); }
  @media (min-width: 1921px) {
    .c-IssueHeader__name {
      font-size: 40px; } }
  @media (max-width: 768px) {
    .c-IssueHeader__name {
      font-size: 25px; } }
  .c-IssueHeader__name em {
    font-style: normal; }
  @media (min-width: 1921px) {
    .c-IssueHeader__name {
      margin-bottom: 15px; } }
  @media (max-width: 768px) {
    .c-IssueHeader__name {
      margin-bottom: 33px; } }

.c-IssueHeader__intro {
  font-size: calc(0.00595 * 100vw + 18.09524px);
  line-height: 1.26667;
  letter-spacing: -0.02em;
  font-family: "RecklessNeue-Book", serif;
  font-style: normal;
  font-weight: 400;
  margin-bottom: calc(0.01488 * 100vw + 15.2381px); }
  @media (min-width: 1921px) {
    .c-IssueHeader__intro {
      font-size: 30px; } }
  @media (max-width: 768px) {
    .c-IssueHeader__intro {
      font-size: 20px; } }
  .c-IssueHeader__intro em {
    font-style: normal; }
  @media (min-width: 1921px) {
    .c-IssueHeader__intro {
      margin-bottom: 45px; } }
  @media (max-width: 768px) {
    .c-IssueHeader__intro {
      margin-bottom: 20px; } }

.c-IssueHeader__btn {
  --lh-t-adjust: 0.9;
  --lh-b-adjust: 1;
  outline: none;
  color: #1d1d1b;
  border-radius: 60px;
  border: 1px solid #d9d9d9;
  text-decoration: none;
  cursor: pointer;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  text-transform: capitalize;
  font-size: calc(0.0006 * 100vw + 13.80952px);
  line-height: 1.33333;
  letter-spacing: 0.01em;
  font-family: "NeueHaasUnicaW1GRegular", sans-serif;
  font-style: normal;
  font-weight: 400;
  transition: border 500ms cubic-bezier(0.25, 1, 0.5, 1);
  padding-top: calc(0.0006 * 100vw + 10.80952px);
  padding-right: calc(0 * 100vw + 20px);
  padding-bottom: calc(0.0006 * 100vw + 10.80952px);
  padding-left: calc(0 * 100vw + 20px);
  background-color: transparent;
  text-transform: initial; }
  @media (min-width: 1921px) {
    .c-IssueHeader__btn {
      font-size: 15px; } }
  @media (max-width: 768px) {
    .c-IssueHeader__btn {
      font-size: 14px; } }
  .c-IssueHeader__btn em {
    font-style: normal; }
  .c-IssueHeader__btn::before {
    content: "";
    display: block;
    height: 0;
    width: 0;
    margin-top: calc((var(--lh-t-adjust) - 1.5) * 0.5em); }
  .c-IssueHeader__btn::after {
    content: "";
    display: block;
    height: 0;
    width: 0;
    margin-top: calc((var(--lh-b-adjust) - 1.5) * 0.5em); }
  @media (min-width: 1921px) {
    .c-IssueHeader__btn {
      padding-top: 12px; } }
  @media (max-width: 768px) {
    .c-IssueHeader__btn {
      padding-top: 11px; } }
  @media (min-width: 1921px) {
    .c-IssueHeader__btn {
      padding-right: 20px; } }
  @media (max-width: 768px) {
    .c-IssueHeader__btn {
      padding-right: 20px; } }
  @media (min-width: 1921px) {
    .c-IssueHeader__btn {
      padding-bottom: 12px; } }
  @media (max-width: 768px) {
    .c-IssueHeader__btn {
      padding-bottom: 11px; } }
  @media (min-width: 1921px) {
    .c-IssueHeader__btn {
      padding-left: 20px; } }
  @media (max-width: 768px) {
    .c-IssueHeader__btn {
      padding-left: 20px; } }
  @media (hover: hover) {
    .c-IssueHeader__btn:hover {
      border: 1px solid #1d1d1b; } }
  @media (max-width: 767px) {
    .c-IssueHeader__btn {
      width: 100%; } }
  @media (min-width: 768px) {
    .c-IssueHeader__btn {
      margin-right: 8px; } }
  @media (max-width: 1439px) {
    .c-IssueHeader__btn {
      margin-bottom: 8px; } }
  .c-IssueHeader__btn svg {
    width: 20px;
    height: 12px;
    display: flex;
    margin-right: 10px; }

.c-IssueHeader__panel {
  width: 100vw;
  height: 100%;
  position: fixed;
  right: 0;
  top: 0;
  background-color: var(--panel-bg-color);
  transform: translate3d(102vw, 0, 0);
  transition: 400ms transform cubic-bezier(0.25, 1, 0.5, 1);
  z-index: 30;
  overflow-y: auto; }
  @media (min-width: 768px) {
    .c-IssueHeader__panel {
      width: 75vw;
      transform: translate3d(77vw, 0, 0); } }
  @media (min-width: 1024px) {
    .c-IssueHeader__panel {
      width: 51vw;
      transform: translate3d(52vw, 0, 0); } }
  .c-IssueHeader__panel.is-active {
    transform: translate3d(0, 0, 0);
    transition: 400ms transform 500ms cubic-bezier(0.25, 1, 0.5, 1); }
  .c-IssueHeader__panel .c-IssueHeader__panel-header {
    width: 100%;
    display: flex;
    position: relative;
    padding-top: calc(0 * 100vw + 20px);
    padding-right: calc(0.0119 * 100vw + 16.19048px);
    padding-bottom: calc(0 * 100vw + 20px);
    padding-left: calc(0.0119 * 100vw + 16.19048px); }
    @media (min-width: 1921px) {
      .c-IssueHeader__panel .c-IssueHeader__panel-header {
        padding-top: 20px; } }
    @media (max-width: 768px) {
      .c-IssueHeader__panel .c-IssueHeader__panel-header {
        padding-top: 20px; } }
    @media (min-width: 1921px) {
      .c-IssueHeader__panel .c-IssueHeader__panel-header {
        padding-right: 40px; } }
    @media (max-width: 768px) {
      .c-IssueHeader__panel .c-IssueHeader__panel-header {
        padding-right: 20px; } }
    @media (min-width: 1921px) {
      .c-IssueHeader__panel .c-IssueHeader__panel-header {
        padding-bottom: 20px; } }
    @media (max-width: 768px) {
      .c-IssueHeader__panel .c-IssueHeader__panel-header {
        padding-bottom: 20px; } }
    @media (min-width: 1921px) {
      .c-IssueHeader__panel .c-IssueHeader__panel-header {
        padding-left: 40px; } }
    @media (max-width: 768px) {
      .c-IssueHeader__panel .c-IssueHeader__panel-header {
        padding-left: 20px; } }
    .c-IssueHeader__panel .c-IssueHeader__panel-header::after {
      content: "";
      width: calc(100% - (20px * 2));
      position: absolute;
      left: 20px;
      bottom: 0;
      height: 1px;
      background-color: #1d1d1b; }
      @media (min-width: 1024px) {
        .c-IssueHeader__panel .c-IssueHeader__panel-header::after {
          left: 40px;
          width: calc(100% - (40px * 2)); } }
  .c-IssueHeader__panel .c-IssueHeader__panel-close {
    position: relative;
    padding-left: 25px;
    cursor: pointer;
    font-size: calc(0.0006 * 100vw + 13.80952px);
    line-height: 1.33333;
    letter-spacing: 0.01em;
    font-family: "NeueHaasUnicaW1GRegular", sans-serif;
    font-style: normal;
    font-weight: 400; }
    .c-IssueHeader__panel .c-IssueHeader__panel-close::before, .c-IssueHeader__panel .c-IssueHeader__panel-close::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      width: 20px;
      height: 2px;
      background-color: #1d1d1b;
      transition: 400ms transform cubic-bezier(0.25, 1, 0.5, 1); }
    .c-IssueHeader__panel .c-IssueHeader__panel-close::before {
      transform: translate(-50%, -50%) rotate(45deg); }
    .c-IssueHeader__panel .c-IssueHeader__panel-close::after {
      transform: translate(-50%, -50%) rotate(-45deg); }
    @media (hover: hover) {
      .c-IssueHeader__panel .c-IssueHeader__panel-close:hover::before {
        transform: translate(-50%, -50%) rotate(135deg); }
      .c-IssueHeader__panel .c-IssueHeader__panel-close:hover::after {
        transform: translate(-50%, -50%) rotate(45deg); } }
    @media (min-width: 1921px) {
      .c-IssueHeader__panel .c-IssueHeader__panel-close {
        font-size: 15px; } }
    @media (max-width: 768px) {
      .c-IssueHeader__panel .c-IssueHeader__panel-close {
        font-size: 14px; } }
    .c-IssueHeader__panel .c-IssueHeader__panel-close em {
      font-style: normal; }
    .c-IssueHeader__panel .c-IssueHeader__panel-close::before, .c-IssueHeader__panel .c-IssueHeader__panel-close::after {
      left: 10px; }
  .c-IssueHeader__panel .c-IssueHeader__panel-content {
    position: relative;
    top: 0;
    opacity: 1;
    transition: 500ms opacity 1000ms cubic-bezier(0.25, 1, 0.5, 1), 500ms top 1000ms cubic-bezier(0.25, 1, 0.5, 1); }
    .c-IssueHeader__panel .c-IssueHeader__panel-content.fade-out {
      top: 5px;
      opacity: 0;
      transition: 500ms opacity cubic-bezier(0.25, 1, 0.5, 1), 500ms top cubic-bezier(0.25, 1, 0.5, 1); }


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/