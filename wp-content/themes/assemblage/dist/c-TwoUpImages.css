/*
Base mixins and Functions ONLY in here
No CSS output!
Remember these tools/utilities will be made availabe to all your components,
any CSS you output in here will add massive bloat to your project.
If you need common css, add to main.scss
========================================================================== */
/* ============================================================================================
	Vertical Spacing (for use with v-spacing mixin)
============================================================================================= */
/* ============================================================================================
	Breakpoints
============================================================================================= */
/* ============================================================================================
	Colours
============================================================================================= */
/* ============================================================================================
	Z-Index
============================================================================================= */
/* =========================================================================
  cubic-bezier curve variables
========================================================================== */
/* =========================================================================
  Font variables
========================================================================== */
/* =========================================================================
  Grid Variables (size vars must match the breakpoint vars)
========================================================================== */
@media (min-width: 320px) {
  body::after {
    content: '{"xsmall":{"value": "320px", "active": true}, "small":{"value": "768px", "active": false}, "medium":{"value": "1024px", "active": false}, "large":{"value": "1440px", "active": false}, "xlarge":{"value": "1920px", "active": false}, "xxlarge":{"value": "2000px", "active": false}}';
    display: block;
    height: 0;
    overflow: hidden;
    width: 0; } }

@media (min-width: 768px) {
  body::after {
    content: '{"xsmall":{"value": "320px", "active": true}, "small":{"value": "768px", "active": true}, "medium":{"value": "1024px", "active": false}, "large":{"value": "1440px", "active": false}, "xlarge":{"value": "1920px", "active": false}, "xxlarge":{"value": "2000px", "active": false}}';
    display: block;
    height: 0;
    overflow: hidden;
    width: 0; } }

@media (min-width: 1024px) {
  body::after {
    content: '{"xsmall":{"value": "320px", "active": true}, "small":{"value": "768px", "active": true}, "medium":{"value": "1024px", "active": true}, "large":{"value": "1440px", "active": false}, "xlarge":{"value": "1920px", "active": false}, "xxlarge":{"value": "2000px", "active": false}}';
    display: block;
    height: 0;
    overflow: hidden;
    width: 0; } }

@media (min-width: 1440px) {
  body::after {
    content: '{"xsmall":{"value": "320px", "active": true}, "small":{"value": "768px", "active": true}, "medium":{"value": "1024px", "active": true}, "large":{"value": "1440px", "active": true}, "xlarge":{"value": "1920px", "active": false}, "xxlarge":{"value": "2000px", "active": false}}';
    display: block;
    height: 0;
    overflow: hidden;
    width: 0; } }

@media (min-width: 1920px) {
  body::after {
    content: '{"xsmall":{"value": "320px", "active": true}, "small":{"value": "768px", "active": true}, "medium":{"value": "1024px", "active": true}, "large":{"value": "1440px", "active": true}, "xlarge":{"value": "1920px", "active": true}, "xxlarge":{"value": "2000px", "active": false}}';
    display: block;
    height: 0;
    overflow: hidden;
    width: 0; } }

@media (min-width: 2000px) {
  body::after {
    content: '{"xsmall":{"value": "320px", "active": true}, "small":{"value": "768px", "active": true}, "medium":{"value": "1024px", "active": true}, "large":{"value": "1440px", "active": true}, "xlarge":{"value": "1920px", "active": true}, "xxlarge":{"value": "2000px", "active": true}}';
    display: block;
    height: 0;
    overflow: hidden;
    width: 0; } }

/* ==========================================================================================================
	Grid Mixins
=========================================================================================================== */
/* ==========================================================================
	Site Transition
	Apply transitions consistently across the project
========================================================================== */
/* ==========================================================================
	Variable Spacing (v-spacing)
	Use with values set in _config.scss
========================================================================== */
/* ==========================================================================
	Tracking
	Convert XD, illustrator, indesign and
	photoshop tracking into letter spacing.
========================================================================== */
/* ============================================================================================================
	Line Height Crop (lhCrop)
	Removes the additional line height from top of text - https://codyhouse.co/blog/post/line-height-crop
	Use to make sure the top of your text lines up with other elements along side it.
	Enter a unitless line height (same as the type line hight)
============================================================================================================= */
/* ===========================================================================================
	Unitless Line Height
	Converts a pixel, percentage, rem or em value to a unitless value based on a given font size.
	Ideal for working out unitless line heights.
	Stolen from Foundation https://get.foundation/sites/docs/sass-functions.html#unitless-calc

	@param {Number} $value - Value to convert to a unitless line height
	@param {Number} $base - The font size to use to work out the line height - defaults to $global-font-size
	@return {Number} - Unitless number
=========================================================================================== */
/* ==================================================================================
	Removes the unit (e.g. px, em, rem) from a value, returning the number only.

	@param {Number} $num - Number to strip unit from.
	@returns {Number} The same number, sans unit.
=================================================================================== */
/* ==================================================================================
	used to create resonsive type

	@param {Number} $min-font-size - Number of the miniumum font size with units.
	@param {Number} $max-font-size - Number of the maximum font size with units.
	@param {Number} $line-height - Number of the lineheight with units.
	@returns font size using the v-space mixin and a unitless lineheight.
=================================================================================== */
/* ==================================================================================
	used to retreive varbailes from the $site-ccs-variables array

	$type = type is the name you set for your nested varaible array
	$size = is the nested variable you wish to get.
	@returns the value of teh specified variable
=================================================================================== */
/* ==================================================================================
	loops through varbailes from the $site-ccs-variables array & out put css var

	$value = used to get the correct value
=================================================================================== */
/* ==================================================================================
	used to retreive css var based on the breakpoint passed

	$breakpoint = used to specify media query
=================================================================================== */
/* ==================================================================================
	SIBLING FADE: fade out siblings around a hovered item
=================================================================================== */
/* ==================================================================================
	close icon mixin (needs somehwere else to sit)
=================================================================================== */
/* ==================================================================================
	Get the last row of your grid
	$coloumns: amount of coloumns in a row
	$siblingType: the sibling selector you want to use to target the row
=================================================================================== */
/* ==========================================================================================================
	Character Style Mixins
=========================================================================================================== */
/* ==============================================================================================
	WYSIWYG Mixin and class
	Apply to content that is using a WYSIWYG editor field.
	Redefines all the typographic HTML elements that TinyMce outputs. (h1,img,p,ul etc.)
=============================================================================================== */
/*
Form Mixins
Create mixins first so they can be reused on Woo forms or other places where you can't add your own classes
========================================================================== */
/* ==========================================================================
	Two up Images Component
========================================================================== */
.c-TwoUpImages {
  width: 100%;
  margin-bottom: calc(0.07143 * 100vw + 37.14286px); }
  @media (min-width: 1921px) {
    .c-TwoUpImages {
      margin-bottom: 180px; } }
  @media (max-width: 768px) {
    .c-TwoUpImages {
      margin-bottom: 60px; } }

.c-TwoUpImages__inner {
  display: block; }
  @supports (display: grid) {
    .c-TwoUpImages__inner {
      display: -ms-grid;
      display: grid;
      grid-template-columns: repeat(var(--site-cols), 1fr);
      column-gap: var(--site-gutter);
      box-sizing: border-box; } }

.c-TwoUpImages__caption {
  width: 100%;
  margin-top: 20px;
  font-size: calc(0.00119 * 100vw + 9.61905px);
  line-height: 1.83333;
  letter-spacing: 0.09em;
  font-family: "DM Mono", monospace;
  font-style: normal;
  font-weight: 400; }
  @media (min-width: 1921px) {
    .c-TwoUpImages__caption {
      font-size: 12px; } }
  @media (max-width: 768px) {
    .c-TwoUpImages__caption {
      font-size: 10px; } }
  .c-TwoUpImages__caption em {
    font-style: normal; }

@media (max-width: 1023px) {
  .c-TwoUpImages__left {
    margin-bottom: 60px; } }

.c-TwoUpImages--equal-images .c-TwoUpImages__left,
.c-TwoUpImages--equal-images .c-TwoUpImages__right {
  -ms-grid-column: 1;
  -ms-grid-column-span: -2;
  grid-column: 1 / -1; }

@media (min-width: 1024px) {
  .c-TwoUpImages--equal-images .c-TwoUpImages__left {
    -ms-grid-column: 2;
    -ms-grid-column-span: 8;
    grid-column: 2 / 10; } }

@media (min-width: 1440px) {
  .c-TwoUpImages--equal-images .c-TwoUpImages__left {
    -ms-grid-column: 2;
    -ms-grid-column-span: 10;
    grid-column: 2 / 12; } }

@media (min-width: 1024px) {
  .c-TwoUpImages--equal-images .c-TwoUpImages__right {
    -ms-grid-column: 12;
    -ms-grid-column-span: 8;
    grid-column: 12 / 20; } }

@media (min-width: 1440px) {
  .c-TwoUpImages--equal-images .c-TwoUpImages__right {
    -ms-grid-column: 14;
    -ms-grid-column-span: 10;
    grid-column: 14 / 24; } }

.c-TwoUpImages--offset-images .c-TwoUpImages__left {
  -ms-grid-column: 2;
  -ms-grid-column-span: 6;
  grid-column: 2 / 8; }
  @media (min-width: 1024px) {
    .c-TwoUpImages--offset-images .c-TwoUpImages__left {
      -ms-grid-column: 1;
      -ms-grid-column-span: 7;
      grid-column: 1 / 8; } }

.c-TwoUpImages--offset-images .c-TwoUpImages__right {
  -ms-grid-column: 1;
  -ms-grid-column-span: -2;
  grid-column: 1 / -1; }
  @media (max-width: 1023px) {
    .c-TwoUpImages--offset-images .c-TwoUpImages__right {
      position: relative;
      grid-column: 1 / -1;
      width: calc(100% + var(--site-margin));
      left: calc(var(--site-margin) * -1);
      width: calc(100% + (var(--site-margin) * 2)); }
      .c-TwoUpImages--offset-images .c-TwoUpImages__right .c-TwoUpImages__caption {
        padding-left: var(--site-margin);
        padding-right: var(--site-margin); } }
  @media (min-width: 1024px) {
    .c-TwoUpImages--offset-images .c-TwoUpImages__right {
      -ms-grid-column: 11;
      -ms-grid-column-span: -12;
      grid-column: 11 / -1; } }
  @media (min-width: 1440px) {
    .c-TwoUpImages--offset-images .c-TwoUpImages__right {
      -ms-grid-column: 14;
      -ms-grid-column-span: -15;
      grid-column: 14 / -1; } }

.c-TwoUpImages--cols-reverse .c-TwoUpImages__inner {
  direction: rtl; }

.c-TwoUpImages--cols-reverse .c-TwoUpImages__left,
.c-TwoUpImages--cols-reverse .c-TwoUpImages__right {
  direction: ltr; }

@media (max-width: 1023px) {
  .c-TwoUpImages--cols-reverse .c-TwoUpImages__right {
    left: calc(var(--site-margin) * 1); } }


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/